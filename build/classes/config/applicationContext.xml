<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
	

    <context:property-placeholder location="classpath:config/data.properties"/> <!-- 连接存放数据库信息的properties文件的地址 -->
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"><!-- 通过特定包中特定属性来完成数据库信息的载入 -->
	<property name="driverClassName" value="${driver}"></property>
	<property name="url" value="${url}"></property>
	<property name="username" value="${name}"></property>
	<property name="password" value="${password}"></property>
	</bean>
	
	<!-- 在SpringIoc容器中创建MyBatis的核心类SqlSessionfactory-->
	<bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
	<!-- <bean  class="org.mybatis.spring.SqlSessionFactoryBean"> -->
		<property name="dataSource" ref="dataSource"></property>
			<property name="mapperLocations">
				<list>
					<value>classpath:com/dao/*.xml</value>
				</list>
		    </property>
	</bean>
	
	
	<!--扫描dao包下所有的mapper文件并自动创建sqlSession对象 -->
	<bean id="mappers" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	<property name="basePackage" value="com.dao"></property>
	<property name="sqlSessionFactoryBeanName" value="SqlSessionFactory"></property>
	</bean>

	<context:component-scan base-package="com.service"></context:component-scan>

</beans>
